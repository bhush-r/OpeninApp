// Generated by view binder compiler. Do not edit!
package com.example.openinapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.openinapp.R;
import com.github.mikephil.charting.charts.LineChart;
import com.google.android.material.button.MaterialButtonToggleGroup;
import com.google.android.material.imageview.ShapeableImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentLinksBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnRecentLinks;

  @NonNull
  public final Button btnTopLinks;

  @NonNull
  public final LineChart chart;

  @NonNull
  public final ImageView ivSearch;

  @NonNull
  public final ShapeableImageView ivSettings;

  @NonNull
  public final TotalClicksItemBinding layoutClicks;

  @NonNull
  public final TopLocationItemBinding layoutLocation;

  @NonNull
  public final TopSourceItemBinding layoutSource;

  @NonNull
  public final LinearLayout mainLayout;

  @NonNull
  public final RecyclerView rvRecentLinks;

  @NonNull
  public final RecyclerView rvTopLinks;

  @NonNull
  public final ShimmerLoadingLayoutBinding shimmerFrameLayout;

  @NonNull
  public final MaterialButtonToggleGroup toggleGroup;

  @NonNull
  public final TextView tvDuration;

  @NonNull
  public final TextView tvGreetings;

  @NonNull
  public final TextView tvOverview;

  @NonNull
  public final TextView tvUserName;

  private FragmentLinksBinding(@NonNull LinearLayout rootView, @NonNull Button btnRecentLinks,
      @NonNull Button btnTopLinks, @NonNull LineChart chart, @NonNull ImageView ivSearch,
      @NonNull ShapeableImageView ivSettings, @NonNull TotalClicksItemBinding layoutClicks,
      @NonNull TopLocationItemBinding layoutLocation, @NonNull TopSourceItemBinding layoutSource,
      @NonNull LinearLayout mainLayout, @NonNull RecyclerView rvRecentLinks,
      @NonNull RecyclerView rvTopLinks, @NonNull ShimmerLoadingLayoutBinding shimmerFrameLayout,
      @NonNull MaterialButtonToggleGroup toggleGroup, @NonNull TextView tvDuration,
      @NonNull TextView tvGreetings, @NonNull TextView tvOverview, @NonNull TextView tvUserName) {
    this.rootView = rootView;
    this.btnRecentLinks = btnRecentLinks;
    this.btnTopLinks = btnTopLinks;
    this.chart = chart;
    this.ivSearch = ivSearch;
    this.ivSettings = ivSettings;
    this.layoutClicks = layoutClicks;
    this.layoutLocation = layoutLocation;
    this.layoutSource = layoutSource;
    this.mainLayout = mainLayout;
    this.rvRecentLinks = rvRecentLinks;
    this.rvTopLinks = rvTopLinks;
    this.shimmerFrameLayout = shimmerFrameLayout;
    this.toggleGroup = toggleGroup;
    this.tvDuration = tvDuration;
    this.tvGreetings = tvGreetings;
    this.tvOverview = tvOverview;
    this.tvUserName = tvUserName;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentLinksBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentLinksBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_links, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentLinksBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnRecentLinks;
      Button btnRecentLinks = ViewBindings.findChildViewById(rootView, id);
      if (btnRecentLinks == null) {
        break missingId;
      }

      id = R.id.btnTopLinks;
      Button btnTopLinks = ViewBindings.findChildViewById(rootView, id);
      if (btnTopLinks == null) {
        break missingId;
      }

      id = R.id.chart;
      LineChart chart = ViewBindings.findChildViewById(rootView, id);
      if (chart == null) {
        break missingId;
      }

      id = R.id.ivSearch;
      ImageView ivSearch = ViewBindings.findChildViewById(rootView, id);
      if (ivSearch == null) {
        break missingId;
      }

      id = R.id.ivSettings;
      ShapeableImageView ivSettings = ViewBindings.findChildViewById(rootView, id);
      if (ivSettings == null) {
        break missingId;
      }

      id = R.id.layoutClicks;
      View layoutClicks = ViewBindings.findChildViewById(rootView, id);
      if (layoutClicks == null) {
        break missingId;
      }
      TotalClicksItemBinding binding_layoutClicks = TotalClicksItemBinding.bind(layoutClicks);

      id = R.id.layoutLocation;
      View layoutLocation = ViewBindings.findChildViewById(rootView, id);
      if (layoutLocation == null) {
        break missingId;
      }
      TopLocationItemBinding binding_layoutLocation = TopLocationItemBinding.bind(layoutLocation);

      id = R.id.layoutSource;
      View layoutSource = ViewBindings.findChildViewById(rootView, id);
      if (layoutSource == null) {
        break missingId;
      }
      TopSourceItemBinding binding_layoutSource = TopSourceItemBinding.bind(layoutSource);

      id = R.id.mainLayout;
      LinearLayout mainLayout = ViewBindings.findChildViewById(rootView, id);
      if (mainLayout == null) {
        break missingId;
      }

      id = R.id.rvRecentLinks;
      RecyclerView rvRecentLinks = ViewBindings.findChildViewById(rootView, id);
      if (rvRecentLinks == null) {
        break missingId;
      }

      id = R.id.rvTopLinks;
      RecyclerView rvTopLinks = ViewBindings.findChildViewById(rootView, id);
      if (rvTopLinks == null) {
        break missingId;
      }

      id = R.id.shimmerFrameLayout;
      View shimmerFrameLayout = ViewBindings.findChildViewById(rootView, id);
      if (shimmerFrameLayout == null) {
        break missingId;
      }
      ShimmerLoadingLayoutBinding binding_shimmerFrameLayout = ShimmerLoadingLayoutBinding.bind(shimmerFrameLayout);

      id = R.id.toggleGroup;
      MaterialButtonToggleGroup toggleGroup = ViewBindings.findChildViewById(rootView, id);
      if (toggleGroup == null) {
        break missingId;
      }

      id = R.id.tvDuration;
      TextView tvDuration = ViewBindings.findChildViewById(rootView, id);
      if (tvDuration == null) {
        break missingId;
      }

      id = R.id.tvGreetings;
      TextView tvGreetings = ViewBindings.findChildViewById(rootView, id);
      if (tvGreetings == null) {
        break missingId;
      }

      id = R.id.tvOverview;
      TextView tvOverview = ViewBindings.findChildViewById(rootView, id);
      if (tvOverview == null) {
        break missingId;
      }

      id = R.id.tvUserName;
      TextView tvUserName = ViewBindings.findChildViewById(rootView, id);
      if (tvUserName == null) {
        break missingId;
      }

      return new FragmentLinksBinding((LinearLayout) rootView, btnRecentLinks, btnTopLinks, chart,
          ivSearch, ivSettings, binding_layoutClicks, binding_layoutLocation, binding_layoutSource,
          mainLayout, rvRecentLinks, rvTopLinks, binding_shimmerFrameLayout, toggleGroup,
          tvDuration, tvGreetings, tvOverview, tvUserName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
